// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Visionamos.MyKeys.DataAccess.OpenBanking.Context;

#nullable disable

namespace Visionamos.MyKeys.DataAccess.OpenBanking.Migrations
{
    [DbContext(typeof(ManageKeysDbContext))]
    [Migration("20250609232358_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Visionamos.MyKeys.DataAccess.OpenBanking.Contract.Entities.AccountType", b =>
                {
                    b.Property<string>("Code")
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)")
                        .HasColumnName("ACT_CODE");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("ACT_DESCRIPTION");

                    b.HasKey("Code");

                    b.ToTable("TBL_ACCOUNT_TYPE");
                });

            modelBuilder.Entity("Visionamos.MyKeys.DataAccess.OpenBanking.Contract.Entities.DocumentType", b =>
                {
                    b.Property<string>("Code")
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)")
                        .HasColumnName("DCT_CODE");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("DCT_DESCRIPTION");

                    b.HasKey("Code");

                    b.ToTable("TBL_DOCUMENT_TYPE");
                });

            modelBuilder.Entity("Visionamos.MyKeys.DataAccess.OpenBanking.Contract.Entities.KeyCustomer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("KCM_GGID");

                    b.Property<string>("Channel")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("KCM_CHANNEL");

                    b.Property<string>("Date")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)")
                        .HasColumnName("KCM_DATE");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("KCM_FIRST_NAME");

                    b.Property<string>("Hour")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)")
                        .HasColumnName("KCM_HOUR");

                    b.Property<string>("KeyStateCode")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)")
                        .HasColumnName("KCM_KEY_STATE");

                    b.Property<string>("ProcessKeyCustomerCode")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)")
                        .HasColumnName("KCM_PROCESS_KEY_CUSTOMER");

                    b.Property<string>("SecondName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("KCM_SECOND_NAME");

                    b.Property<string>("SecondSurName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("KCM_SECOND_SUR_NAME");

                    b.Property<string>("Sequence")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)")
                        .HasColumnName("KCM_SEQUENCE");

                    b.Property<string>("SourceAccountTypeCode")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)")
                        .HasColumnName("KCM_SOURCE_ACCOUNT_TYPE");

                    b.Property<string>("SourceEntity")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("KCM_SOURCE_ENTITY");

                    b.Property<string>("SourceIdentification")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("KCM_SOURCE_IDENTIFICATION");

                    b.Property<string>("SourceIdentificationTypeCode")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)")
                        .HasColumnName("KCM_SOURCE_TYPE_IDENTIFICATION");

                    b.Property<string>("SourceNumberAccount")
                        .IsRequired()
                        .HasMaxLength(34)
                        .HasColumnType("nvarchar(34)")
                        .HasColumnName("KCM_SOURCE_ACCOUNT_NUMBER");

                    b.Property<string>("SourceTypeAccountDescription")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("KCM_SOURCE_TYPE_ACCOUNT_DESCRIPTION");

                    b.Property<string>("SurName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("KCM_SUR_NAME");

                    b.Property<string>("TypeKeyCustomer")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)")
                        .HasColumnName("KCM_TYPE_KEY_CUSTOMER");

                    b.Property<string>("User")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("KCM_USER");

                    b.Property<string>("ValueKeyCustomer")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)")
                        .HasColumnName("KCM_VALUE_KEY_CUSTOMER");

                    b.HasKey("Id");

                    b.HasIndex("KeyStateCode");

                    b.HasIndex("ProcessKeyCustomerCode");

                    b.HasIndex("Sequence")
                        .IsUnique();

                    b.HasIndex("SourceAccountTypeCode");

                    b.HasIndex("SourceIdentification");

                    b.HasIndex("SourceIdentificationTypeCode");

                    b.HasIndex("ValueKeyCustomer")
                        .IsUnique();

                    b.HasIndex("SourceIdentification", "ValueKeyCustomer");

                    b.ToTable("TBL_KEY_CUSTOMER");
                });

            modelBuilder.Entity("Visionamos.MyKeys.DataAccess.OpenBanking.Contract.Entities.KeyProcess", b =>
                {
                    b.Property<string>("Code")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)")
                        .HasColumnName("KPR_CODE");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("KPR_DESCRIPTION");

                    b.HasKey("Code");

                    b.ToTable("TBL_KEY_PROCESS");
                });

            modelBuilder.Entity("Visionamos.MyKeys.DataAccess.OpenBanking.Contract.Entities.KeyState", b =>
                {
                    b.Property<string>("Code")
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)")
                        .HasColumnName("KST_CODE");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("KST_DESCRIPTION");

                    b.HasKey("Code");

                    b.ToTable("TBL_KEY_STATE");
                });

            modelBuilder.Entity("Visionamos.MyKeys.DataAccess.OpenBanking.Contract.Entities.KeyCustomer", b =>
                {
                    b.HasOne("Visionamos.MyKeys.DataAccess.OpenBanking.Contract.Entities.KeyState", "KeyState")
                        .WithMany("KeyCustomers")
                        .HasForeignKey("KeyStateCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Visionamos.MyKeys.DataAccess.OpenBanking.Contract.Entities.KeyProcess", "KeyProcess")
                        .WithMany("KeyCustomers")
                        .HasForeignKey("ProcessKeyCustomerCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Visionamos.MyKeys.DataAccess.OpenBanking.Contract.Entities.AccountType", "AccountType")
                        .WithMany("KeyCustomers")
                        .HasForeignKey("SourceAccountTypeCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Visionamos.MyKeys.DataAccess.OpenBanking.Contract.Entities.DocumentType", "DocumentType")
                        .WithMany("KeyCustomers")
                        .HasForeignKey("SourceIdentificationTypeCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AccountType");

                    b.Navigation("DocumentType");

                    b.Navigation("KeyProcess");

                    b.Navigation("KeyState");
                });

            modelBuilder.Entity("Visionamos.MyKeys.DataAccess.OpenBanking.Contract.Entities.AccountType", b =>
                {
                    b.Navigation("KeyCustomers");
                });

            modelBuilder.Entity("Visionamos.MyKeys.DataAccess.OpenBanking.Contract.Entities.DocumentType", b =>
                {
                    b.Navigation("KeyCustomers");
                });

            modelBuilder.Entity("Visionamos.MyKeys.DataAccess.OpenBanking.Contract.Entities.KeyProcess", b =>
                {
                    b.Navigation("KeyCustomers");
                });

            modelBuilder.Entity("Visionamos.MyKeys.DataAccess.OpenBanking.Contract.Entities.KeyState", b =>
                {
                    b.Navigation("KeyCustomers");
                });
#pragma warning restore 612, 618
        }
    }
}
